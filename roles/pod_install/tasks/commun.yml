- name: install python & co
  apt:
    name: "{{packages}}"
  vars:
    packages:
    - python3
    - python3-pip
    - python3-dev
    - default-libmysqlclient-dev
    - git
  become: True

- file:
    path: "{{venv_path}}"
    state: directory
    owner: "{{user}}"
    group: "{{group}}"
    mode: 0755
  become: True

- file:
    path: "{{django_path}}"
    state: directory
    owner: "{{user}}"
    group: "{{group}}"
    mode: 0755
  become: True

- file:
    path: "{{logs}}"
    state: directory
    owner: "{{user}}"
    group: root
    mode: 0755
  become: True

- file:
    src: "{{django_path}}"
    dest: "/home/{{user}}/django"
    state: link
    owner: "{{user}}"
    group: "{{group}}"
  become: True

- name: Custom bashrc
  blockinfile:
    path:  "/home/{{user}}/.bashrc"
    content: |
      export WORKON_HOME="{{venv_path}}"
      export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
      source /usr/local/bin/virtualenvwrapper.sh
      export http_proxy="http://{{proxy}}:{{proxy_port}}"
      export https_proxy="http://{{proxy}}:{{proxy_port}}"
      export ftp_proxy="http://{{proxy}}:{{proxy_port}}"

- name: Source bashrc
  shell: . "/home/{{user}}/.bashrc"

- pip:
    name: virtualenvwrapper
    executable: "{{pip3}}"
  environment:
    HTTP_PROXY: "http://{{proxy}}:{{proxy_port}}"
    HTTPS_PROXY: "http://{{proxy}}:{{proxy_port}}"
  become: True


- name: Make virtualenv
  shell: ". /usr/local/bin/virtualenvwrapper.sh && mkvirtualenv --system-site-packages --python=/usr/bin/python3 {{ venv }}"
  args:
    executable: /bin/bash
    creates: "{{ venv_path }}/{{ venv }}"
  environment:
    WORKON_HOME: "{{venv_path}}"
    VIRTUALENVWRAPPER_PYTHON: /usr/bin/python3
    HTTP_PROXY: "http://{{proxy}}:{{proxy_port}}"
    HTTPS_PROXY: "http://{{proxy}}:{{proxy_port}}"
  register: mkvirtualenv
  failed_when: 'mkvirtualenv.changed and "New python executable" not in mkvirtualenv.stdout'


- git_config:
    name: http.proxy
    scope: global
    value: "http://{{proxy}}:{{proxy_port}}"

- git:
    clone: yes
    repo: "{{depot}}"
    dest: "{{django_path}}"

- pip:
    requirements: "{{requirements}}"
    virtualenv: "{{venv_path}}/{{venv}}"
  environment:
    HTTP_PROXY: "http://{{proxy}}:{{proxy_port}}"
    HTTPS_PROXY: "http://{{proxy}}:{{proxy_port}}"

- pip:
    name: mysqlclient
    virtualenv: "{{venv_path}}/{{venv}}"
  environment:
    HTTP_PROXY: "http://{{proxy}}:{{proxy_port}}"
    HTTPS_PROXY: "http://{{proxy}}:{{proxy_port}}"
